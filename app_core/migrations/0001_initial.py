# Generated by Django 5.1.2 on 2024-11-10 22:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название лиги')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Картинка')),
                ('description', models.CharField(default='', max_length=255, verbose_name='Описание задачи')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='Название задачи')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Картинка')),
                ('dop_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Доп. название задачи')),
                ('description', models.CharField(default='', max_length=255, verbose_name='Описание задачи')),
                ('reward_currency', models.IntegerField(default=0, verbose_name='Награда (баллы)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность задачи')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', models.PositiveBigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя игрока')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации игрока')),
                ('points', models.IntegerField(default=1000, verbose_name='Текущие баллы игрока')),
                ('points_all', models.IntegerField(default=0, verbose_name='Количество баллов игрока за всё время')),
                ('tap_points', models.IntegerField(default=1, verbose_name='Баллы за 1 тап в игре')),
                ('tickets', models.IntegerField(default=3, verbose_name='Текущее количество билетов игрока')),
                ('tickets_all', models.IntegerField(default=3, verbose_name='Количество билетов игрока за всё время')),
                ('consecutive_days', models.IntegerField(default=0, verbose_name='Количество дней подряд')),
                ('last_login_date', models.DateField(blank=True, null=True, verbose_name='Последний вход для расчёта дней подряд')),
                ('login_today', models.BooleanField(default=False, verbose_name='Входил ли пользователь сегодня')),
                ('is_new', models.BooleanField(default=False, verbose_name='Новый игрок/не новый')),
                ('daily_points', models.IntegerField(default=0, verbose_name='Очки за текущий день')),
                ('daily_bonus_friends', models.IntegerField(default=0, verbose_name='Бонус от рефералов за текущий день')),
                ('rank', models.IntegerField(blank=True, null=True, verbose_name='Место игрока в топ-100')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='app_core.league', verbose_name='Лига игрока')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='ReferralSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_bonus', models.BooleanField(default=True, verbose_name='Бонус реферала')),
                ('new_player_bonus', models.BooleanField(default=True, verbose_name='Бонус нового игрока')),
                ('new_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_person', to='app_core.player', verbose_name='Новый игрок')),
                ('referral', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral', to='app_core.player', verbose_name='Реферал')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Время начала')),
                ('completed', models.BooleanField(default=False, verbose_name='Выполнено')),
                ('add_flag', models.BooleanField(default=False, verbose_name='Доп. флаг')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_player', to='app_core.player', verbose_name='Игрок')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_tasks', to='app_core.task', verbose_name='Задача')),
            ],
        ),
    ]
